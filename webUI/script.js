// L·∫•y c√°c ph·∫ßn t·ª≠ DOM
const chatArea = document.getElementById('chatArea');
const chatInput = document.getElementById('chatInput');
const sendBtn = document.getElementById('sendBtn');

const chatModeSelect = document.getElementById('chatModeSelect');
const modelSelect = document.getElementById('modelSelect');
const temperatureInput = document.getElementById('temperatureInput');
const fileInput = document.getElementById('fileInput');
const uploadGroup = document.getElementById('uploadGroup');
const fileNameSpan = document.getElementById('fileName');
const uploadBtn = document.getElementById('uploadBtn');
const themeToggleBtn = document.getElementById('themeToggleBtn');

let currentMode = chatModeSelect.value;

// Hi·ªÉn th·ªã ho·∫∑c ·∫©n ph·∫ßn upload file d·ª±a tr√™n ch·∫ø ƒë·ªô chat
chatModeSelect.addEventListener('change', () => {
    currentMode = chatModeSelect.value;
    uploadGroup.style.display = (currentMode === 'document') ? 'flex' : 'none';
    chatArea.innerHTML = ''; // Xo√° n·ªôi dung chat khi chuy·ªÉn ƒë·ªïi ch·∫ø ƒë·ªô
});

// H√†m th√™m tin nh·∫Øn v√†o khung chat
function addMessage(sender, text) {
    const messageDiv = document.createElement('div');
    let icon = '';
    if (sender === "B·∫°n") {
        messageDiv.classList.add("message", "user-message");
        icon = `<i class="fas fa-user"></i>`;
    } else if (sender === "Bot") {
        messageDiv.classList.add("message", "bot-message");
        icon = `<i class="fas fa-robot"></i>`;
    } else {
        messageDiv.classList.add("message", "system-message");
    }
    messageDiv.innerHTML = `<div class="message-content">${icon} <span>${text}</span></div>`;
    chatArea.appendChild(messageDiv);
    // T·ª± ƒë·ªông cu·ªôn xu·ªëng cu·ªëi
    chatArea.scrollTop = chatArea.scrollHeight;
}


// X·ª≠ l√Ω g·ª≠i tin nh·∫Øn khi click v√†o n√∫t ho·∫∑c nh·∫•n Enter
sendBtn.addEventListener('click', sendMessage);
chatInput.addEventListener('keypress', (event) => {
    if (event.key === 'Enter') {
        sendMessage();
    }
});

function sendMessage() {
    const message = chatInput.value.trim();
    if (message === '') return;
    addMessage('B·∫°n', message);
    chatInput.value = '';

    // Gi·∫£ l·∫≠p ph·∫£n h·ªìi c·ªßa Bot sau 500ms
    setTimeout(() => {
        let response;
        if (currentMode === 'normal') {
            response = "Ph·∫£n h·ªìi cho ch·∫ø ƒë·ªô Chat Th√¥ng Th∆∞·ªùng.";
        } else if (currentMode === 'document') {
            response = "Ph·∫£n h·ªìi cho ch·∫ø ƒë·ªô Chat v·ªõi T√†i li·ªáu.";
        }
        addMessage('Bot', response);
    }, 500);
}

// Hi·ªÉn th·ªã t√™n file khi ng∆∞·ªùi d√πng ch·ªçn file
fileInput.addEventListener('change', () => {
    const file = fileInput.files[0];
    if (file) {
        fileNameSpan.textContent = file.name;
    } else {
        fileNameSpan.textContent = "Ch∆∞a c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn";
    }
});

// X·ª≠ l√Ω s·ª± ki·ªán upload file
uploadBtn.addEventListener('click', () => {
    const file = fileInput.files[0];
    if (file) {
        addMessage('H·ªá th·ªëng', `ƒê√£ upload file: ${file.name}`);
        // Sau khi x·ª≠ l√Ω upload, reset file input
        fileInput.value = "";
        fileNameSpan.textContent = "Ch∆∞a c√≥ file n√†o ƒë∆∞·ª£c ch·ªçn";
    } else {
        addMessage('H·ªá th·ªëng', "Vui l√≤ng ch·ªçn file tr∆∞·ªõc khi upload.");
    }
});

// X·ª≠ l√Ω chuy·ªÉn theme khi b·∫•m n√∫t
themeToggleBtn.addEventListener('click', () => {
    if (document.body.classList.contains("theme-light")) {
        document.body.classList.remove("theme-light");
        document.body.classList.add("theme-dark");
        themeToggleBtn.textContent = "‚òÄÔ∏è"; // Icon chuy·ªÉn v·ªÅ light
    } else {
        document.body.classList.remove("theme-dark");
        document.body.classList.add("theme-light");
        themeToggleBtn.textContent = "üåô"; // Icon chuy·ªÉn v·ªÅ dark
    }
});

const clearChatBtn = document.getElementById('clearChatBtn');

clearChatBtn.addEventListener('click', () => {
    chatArea.innerHTML = '';

    const messageDiv = document.createElement('div');
    messageDiv.classList.add("message", "system-message");
    messageDiv.innerHTML = `<div class="message-content"><span>ƒê√£ xo√° to√†n b·ªô n·ªôi dung chat.</span></div>`;
    chatArea.appendChild(messageDiv);
    chatArea.scrollTop = chatArea.scrollHeight;

    // T·ª± ƒë·ªông ·∫©n sau 2 gi√¢y
    setTimeout(() => {
        chatArea.removeChild(messageDiv);
    }, 2000);
});
